"""
Django settings for kislevsmart project.

Generated by 'django-admin startproject' using Django 3.2.25.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path
import environ
import dj_database_url



# Inicializa django-environ
env = environ.Env(
    DEBUG=(bool, False)
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@@i8x+#kv7)iilb$kc3^zpgf+m^%)&_a!x!8bb+b2!m0f_*61k'

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = os.getenv('DEBUG', 'False') == 'True'
DEBUG = True
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/


ALLOWED_HOSTS = ['*'] 






# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'kislevsmart',
    'whitenoise.runserver_nostatic',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Añadido para archivos estáticos
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'kislevsmart.urls'

import os

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'kislevsmart', 'templates'),
            os.path.join(BASE_DIR, 'accounts', 'templates'),
            os.path.join(BASE_DIR, 'templates'),  # Añade esta línea
            os.path.join(BASE_DIR),  # Añade esta línea si el template está en la raíz
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'kislevsmart.wsgi.application'



SESSION_ENGINE = 'django.contrib.sessions.backends.db'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # Backend por defecto
)

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases



# Database configuration
if os.getenv('DATABASE_URL', None):
    # Configuración para Railway (producción)
    import dj_database_url
    DATABASES = {
        'default': dj_database_url.config(
            default=os.getenv('DATABASE_URL')
        )
    }
else:
    # Configuración para desarrollo local
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'login',
            'USER': 'yagami',
            'PASSWORD': 'Ipsos2012*',
            'HOST': 'localhost',
            'PORT': '5432',
        }
    }

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': 'login',
#        'USER': 'yagami',
#        'PASSWORD': 'Ipsos2012*',
#        'HOST': 'localhost',  # O el host que uses
#        'PORT': '5432',       # Puerto predeterminado de PostgreSQL
#    }
#}

AUTH_USER_MODEL = 'accounts.Usuario'

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'es-mx'

TIME_ZONE = 'America/Bogota'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


LOGIN_URL = '/accounts/login/'
ESSION_ENGINE = 'django.contrib.sessions.backends.db'


# Configuración de archivos estáticos
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'kislevsmart', 'static'),  # Archivos estáticos del proyecto
    os.path.join(BASE_DIR, 'accounts', 'static'),      # Archivos estáticos de accounts
]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'




# Configuración de archivos media
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')



# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuración de Email con SendGrid
EMAIL_BACKEND = 'sendgrid_backend.SendgridBackend'
SENDGRID_API_KEY = env('SENDGRID_API_KEY', default='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')
DEFAULT_FROM_EMAIL = env('DEFAULT_FROM_EMAIL', default='mariax.ceb@gmail.com')
SENDGRID_SANDBOX_MODE_IN_DEBUG = False



# Configuración de seguridad adicional para producción
if not DEBUG:
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

if DEBUG:
    SECURE_SSL_REDIRECT = False
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False
    SECURE_BROWSER_XSS_FILTER = False
    SECURE_CONTENT_TYPE_NOSNIFF = False
    SECURE_PROXY_SSL_HEADER = None

# Configuración de Email con SendGrid
#EMAIL_BACKEND = 'sendgrid_backend.SendgridBackend'
#SENDGRID_API_KEY = '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'
#DEFAULT_FROM_EMAIL = 'mariax.ceb@gmail.com'  # El email que configuraste en SendGrid
#SENDGRID_SANDBOX_MODE_IN_DEBUG = False  # Ponlo en False cuando quieras enviar emails reales
# Configuración adicional recomendada
SENDGRID_TRACK_EMAIL_OPENS = True
SENDGRID_TRACK_CLICKS = True
SENDGRID_REPLY_TO = DEFAULT_FROM_EMAIL
SENDGRID_MERGE_FIELD_FORMAT = None
SENDGRID_CATEGORIES = ['notificaciones_servicios']


# Configuración de logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        '': {  # Root logger
            'handlers': ['console'],
            'level': 'WARNING',  # Cambiado a WARNING para reducir logs
        },
        'tu_app': {  # Reemplaza con el nombre de tu app
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}



